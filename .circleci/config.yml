version: 2.1
executors:
  docker-oe:
    docker:
      - image: tprrt/debian-oe:latest
    resource_class: medium
  docker-python3:
    docker:
      - image: circleci/python:3.9.1-buster
    resource_class: medium
commands:
  prepare:
    parameters:
      manifest:
        default: nodistro/branch/master.xml
        type: string
    steps:
      - run:
          name: Install git-repo
          command: |
            mkdir ~/bin
            wget https://commondatastorage.googleapis.com/git-repo-downloads/repo -O ~/bin/repo
            chmod a+x ~/bin/repo
            echo 'export PATH="${PATH}:~/bin"' >> ${BASH_ENV}
      - run:
          name: Configure Git
          command: |
            git config --global user.email "tprrt@tupi.fr"
            git config --global user.name "tprrt"
      - run:
          name: Configure SSH
          command: |
            mkdir ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            ssh-keyscan git.openembedded.org >> ~/.ssh/known_hosts
            ssh-keyscan git.yoctoproject.org >> ~/.ssh/known_hosts
      # - setup_remote_docker:
      #     docker_layer_caching: true
      - run:
          name: Setup the build environment
          command: |
            mkdir dist
            cd dist
            repo init -u git@github.com:tprrt/manifests.git -b $CIRCLE_BRANCH -m <<parameters.manifest>>
            repo sync -j4
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - .gitconfig
            - .ssh
  fetch:
    parameters:
      manifest:
        default: nodistro/branch/master.xml
        type: string
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - downloads-{{ .Branch }}-{{ checksum "dist/.repo/manifests/<<parameters.manifest>>" }}
            - downloads-{{ .Branch }}-
            - downloads-
      - run:
          name: Fetch sources
          command: |
            cd dist
            source ./layers/oe-init-build-env
            bitbake --runall=fetch core-image-minimal
      - save_cache:
          key: downloads-{{ .Branch }}-{{ checksum "dist/.repo/manifests/<<parameters.manifest>>" }}
          paths:
            - dist/build/downloads
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - .gitconfig
            - .ssh
  build:
    parameters:
      manifest:
        default: nodistro/branch/master.xml
        type: string
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - sstate-cache-{{ .Branch }}-{{ checksum "dist/.repo/manifests/<<parameters.manifest>>" }}
            - sstate-cache-{{ .Branch }}-
            - sstate-cache-
      - run:
          name: Build the image
          command: |
            cd dist
            source ./layers/oe-init-build-env
            bitbake core-image-minimal
      - save_cache:
          key: sstate-cache-{{ .Branch }}-{{ checksum "dist/.repo/manifests/<<parameters.manifest>>" }}
          paths:
            - dist/build/sstate-cache
      - store_artifacts:
          path: build/tmp/deploy
jobs:
  master-prepare:
    executor: docker-python3
    steps:
      - prepare:
        manifest: nodistro/branch/master.xml
  dunfell-prepare:
    executor: docker-python3
    steps:
      - prepare:
        manifest: nodistro/branch/dunfell.xml
  master-fetch:
    executor: docker-oe
    steps:
      - fetch:
        manifest: nodistro/branch/master.xml
  dunfell-fetch:
    executor: docker-oe
    steps:
      - fetch:
        manifest: nodistro/branch/dunfell.xml
  master-build:
    executor: docker-oe
    steps:
      - fetch:
        manifest: nodistro/branch/master.xml
  dunfell-build:
    executor: docker-oe
    steps:
      - fetch:
        manifest: nodistro/branch/dunfell.xml
workflows:
  version: 2
  master-prepare-fetch-build:
    jobs:
      - master-prepare:
          filters:
            branches:
              ignore:
                - gh-pages
      - master-fetch:
          filters:
            branches:
              ignore:
                - gh-pages
      - master-build:
          filters:
            branches:
              ignore:
                - gh-pages
          requires:
            - master-fetch
  dunfell-prepare-fetch-build:
    jobs:
      - dunfell-prepare:
          filters:
            branches:
              ignore:
                - gh-pages

      - dunfell-fetch:
          filters:
            branches:
              ignore:
                - gh-pages
          requires:
            - dunfell-prepare
      - dunfell-build:
          filters:
            branches:
              ignore:
                - gh-pages
          requires:
            - dunfell-fetch
